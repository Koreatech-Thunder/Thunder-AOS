plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.7.20'
    id "org.jlleitschuh.gradle.ktlint" version "10.3.0"
    id 'com.google.gms.google-services'
    id 'com.google.android.gms.oss-licenses-plugin'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
android {
    compileSdk 33

    signingConfigs {
        releaseWithSignedKey {
            storeFile file(properties.getProperty("STORE_FILE"))
            keyAlias properties.getProperty("KEY_ALIAS")
            keyPassword properties.getProperty("KEY_PASSWORD")
            storePassword properties.getProperty("STORE_PASSWORD")
        }
    }

    defaultConfig {
        applicationId "com.koreatech.thunder"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "KAKAO_REDIRECT_SCHEME", properties["KAKAO_REDIRECT_SCHEME"]
        buildConfigField "String", "THUNDER_URI", properties["THUNDER_URI"]
        manifestPlaceholders["KAKAO_REDIRECT_SCHEME"] = properties["KAKAO_REDIRECT_SCHEME"]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseWithSignedKey
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.3.2"
    }
    // kotest
    android.testOptions {
        unitTests.all {
            it.useJUnitPlatform()
        }
    }
}

dependencies {
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.1'
    // socket
    implementation('io.socket:socket.io-client:2.1.0') {
        // excluding org.json which is provided by Android
        exclude group: 'org.json', module: 'json'
    }
    // firebase
    implementation platform('com.google.firebase:firebase-bom:31.2.2')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'

    // view pager
    implementation "com.google.accompanist:accompanist-pager:0.29.1-alpha"
    implementation "com.google.accompanist:accompanist-pager-indicators:0.29.1-alpha"

    // kakao
    implementation "com.kakao.sdk:v2-user:2.12.1"
    // kotlin reflection
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.7.20"
    // time picker
    implementation 'com.github.commandiron:WheelPickerCompose:1.1.9'
    // coroutine test
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    // kotlin test
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    // mockk
    testImplementation "io.mockk:mockk:1.13.3"
    androidTestImplementation "io.mockk:mockk-android:1.13.3"
    // kotest
    testImplementation 'io.kotest:kotest-runner-junit5:5.5.4'
//    testImplementation 'io.kotest:kotest-assertions-core:5.5.4'
//    testImplementation 'io.kotest:kotest-property:5.5.4'

    def nav_version = "2.5.3"
    implementation "androidx.navigation:navigation-compose:$nav_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    implementation platform('androidx.compose:compose-bom:2023.04.01')

//    // Integration with activities, ViewModels
//    implementation 'androidx.activity:activity-compose:1.5.1'
//    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'

//    // Material Design 2
//    implementation 'androidx.compose.material:material'
//
    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

//    // UI Tests
//    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
//    debugImplementation 'androidx.compose.ui:ui-test-manifest'
//
    // lifecycle - compose
    def lifecycle_version = "2.6.0-alpha01"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version"

    //compose coil
    implementation "io.coil-kt:coil-compose:2.2.2"

    // hilt
    implementation 'com.google.dagger:hilt-android:2.44'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    kapt 'com.google.dagger:hilt-compiler:2.44'

    // shared preference
    implementation 'androidx.security:security-crypto-ktx:1.1.0-alpha03'

    // ktx
    implementation 'androidx.activity:activity-ktx:1.5.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.0-alpha01'
    implementation 'androidx.fragment:fragment-ktx:1.5.3'

    // coroutine
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    // network
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //timber
    implementation 'com.jakewharton.timber:timber:5.0.1'

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
}

ktlint {
    android = true
    coloredOutput = true
    verbose = true
    outputToConsole = true
    disabledRules = ["max-line-length", "import-ordering"]
    reporters {
        reporter(org.jlleitschuh.gradle.ktlint.reporter.ReporterType.PLAIN)
        reporter(org.jlleitschuh.gradle.ktlint.reporter.ReporterType.CHECKSTYLE)
    }
}